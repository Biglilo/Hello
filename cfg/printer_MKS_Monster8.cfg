[mcu]
serial: *

[printer]
kinematics: cartesian

max_velocity: 200  
max_accel: 500
max_accel_to_decel: 250
max_z_velocity: 5
max_z_accel: 10
square_corner_velocity: 10.0

[stepper_x]
# x motor, port: Driver0:X

step_pin: PC14
dir_pin: PC13
enable_pin: !PC15
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
#   The number of full steps for one rotation of the stepper motor.
#   Set this to 200 for a 1.8 degree stepper motor or set to 400 for a
#   0.9 degree motor. The default is 200.
endstop_pin: PA14
position_endstop: -41
position_min: -42
position_max: 310
homing_speed: 50

[stepper_y]
# y motor(left), port: Driver1:Y

step_pin: PE5
dir_pin: !PE4
enable_pin: !PC15
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: PA15
position_endstop: -68
position_min: -69
position_max: 310
homing_speed: 50

[stepper_y1]
# y motor(right), port: Driver2:Z-1/Z-2

step_pin: PE1
dir_pin: PE0
enable_pin: !PE2
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: PA15
#position_endstop: 310
#position_max: 310
#homing_speed: 50

[stepper_z]
# z motor1, port: Driver4:E1

step_pin: PD6
dir_pin: PD5
enable_pin: !PD7
microsteps: 16
rotation_distance: 5
endstop_pin: probe:z_virtual_endstop
position_max: 310
position_min: -10
homing_speed: 10.0
second_homing_speed: 3.0
homing_retract_dist: 3.0

[stepper_z1]
# z motor2, port: Driver5:E2 

step_pin: PD2
dir_pin: PD1
enable_pin: !PD3
microsteps: 16
rotation_distance: 5

[stepper_z2]
# z motor3, port: Driver6:E3

step_pin: PC7
dir_pin: PC6
enable_pin: !PC8
microsteps: 16
rotation_distance: 5

[stepper_z3]
# z motor4, port: Driver7:E4

step_pin: PD13
dir_pin: PD12
enable_pin: !PD14
microsteps: 16
rotation_distance: 5

##	TMC setting
##	Make sure to update below for your relevant driver (TMC2208 (2225) or TMC2209 (2226))

[tmc2208 stepper_x]
uart_pin: PE6
run_current: 0.6
hold_current: 0.3
stealthchop_threshold: 99999

[tmc2208 stepper_y]
uart_pin: PE3
run_current: 0.6
hold_current: 0.3
stealthchop_threshold: 99999

[tmc2208 stepper_y1]
uart_pin: PB7
run_current: 0.6
hold_current: 0.3
stealthchop_threshold: 99999

[tmc2208 extruder]
uart_pin: PB3
run_current: 0.6
hold_current: 0.3
stealthchop_threshold: 99999

[tmc2208 stepper_z]
uart_pin: PD4
run_current: 0.5
hold_current: 0.2
stealthchop_threshold: 99999

[tmc2208 stepper_z1]
uart_pin: PD0
run_current: 0.5
hold_current: 0.2
stealthchop_threshold: 99999

[tmc2208 stepper_z2]
uart_pin: PD15
run_current: 0.5
hold_current: 0.2
stealthchop_threshold: 99999

[tmc2208 stepper_z3]
uart_pin: PD11
run_current: 0.5
hold_current: 0.2
stealthchop_threshold: 99999

[extruder]
# extruder motor, port: Driver3:E0

step_pin: PB5
dir_pin: PB4
enable_pin: !PB6
microsteps: 16
# rotation_distance: 21		#my test
# rotation_distance: 25.12	#voron cfg BMG
rotation_distance: 33.500
gear_ratio: 50:17
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9degree
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB1				#HE0
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC1				#TH0

control: pid
pid_Kp: 16.291
pid_Ki: 0.928
pid_Kd: 71.475

#室温24,目标温度220，测试得到pid_Kp=16.291 pid_Ki=0.928 pid_Kd=71.475

# 修改/校正方法:
# 修改挤出机的最高温度限制：
# max_temp: 260
# 输入下面命令，等挤出机和热床冷却至室温：
# TURN_OFF_HEATERS
# 输入下面命令等待打印机完成元件的加热循环：
# 挤出头：
# PID_CALIBRATE HEATER=extruder TARGET=220
# 热床：
# PID_CALIBRATE HEATER=heater_bed TARGET=45
# 检查你的G码端您的打印机会响应pid_Kp，pid_Ki和pid_Kd值。
# 发送命令以存储和更新您的 PID 设置：
# SAVE_CONFIG
# 如果更新未应用，请重新启动打印机固件。
min_temp: 0
max_temp: 235

max_power: 1.0
min_extrude_temp: 200

pressure_advance: 0.0625

[heater_bed]
heater_pin: PB10			#BED
sensor_pin: PC0				#TB
sensor_type: NTC 100K MGB18-104F39050L32
#sensor_type: EPCOS 100K B57560G104F
#control: watermark

max_power: 1.0

min_temp: 0
max_temp: 60
control: pid

pid_kp: 74.242
pid_ki: 0.643
pid_kd: 2143.735

#室温24,目标温度40，max_power: 0.7,测试得到:pid_Kp=50.397 pid_Ki=0.503 pid_Kd=1262.436
#室温24,目标温度45，max_power: 1.0,测试得到:pid_Kp=74.242 pid_Ki=0.643 pid_Kd=2143.735
#室温24,目标温度60，max_power: 1.0,测试得到:pid_Kp=71.205 pid_Ki=0.993 pid_Kd=1276.354

# 修改/校正方法:
# 参考挤出机的设置。 

[verify_heater extruder]
max_error: 120
heating_gain: 3
check_gain_time: 20


[input_shaper]
shaper_freq_x: 1
shaper_freq_y: 1


[bltouch]
sensor_pin: PB13		#Z-
control_pin: PA8		#3Dtouch

x_offset: 10.0
y_offset: 25.0
z_offset: 1.4

#pin_move_time: 0.680

speed: 40
samples: 3
samples_result: average
sample_retract_dist: 3
samples_tolerance: 0.06
samples_tolerance_retries: 3

[safe_z_home]
#	XY Location of the Z Endstop Switch
#	Update -10,-10 to the XY coordinates of your endstop pin 
#	(such as 157,305) after going through Z Endstop Pin
#	Location Definition step.
home_xy_position: 155,155
speed: 50
z_hop: 20

#[probe]
#pin: PF0
#x_offset: 10.0
#y_offset: 25.0
#z_offset: 1
#speed: 40
#samples: 3
#samples_result: average
#sample_retract_dist: 3
#samples_tolerance: 0.006
#samples_tolerance_retries: 3

[idle_timeout]
timeout: 3600

# [homing_override]
# axes: z
# set_position_z: 0
# gcode:
#    G90
#    G0 Z5 F600
#    G28 X Y F1800
#    G0 X155 Y155 F3600 
#    G28 Z
#    G0 Z5 F1800
   
[quad_gantry_level]
#4轴调平设置
#   Use QUAD_GANTRY_LEVEL to level a gantry.
gantry_corners:
	-60,-10
	310,310
points:
	40,40
	40,270
	270,270
	270,40
speed: 100
horizontal_move_z: 5
retries: 0
retry_tolerance: 0.01
max_adjust: 5

[heater_fan nozzle_fan]
# 挤出头风扇设置，挤出头开始加热时开启
pin: PA2			#fan0
max_power: 1.0

[fan]
# 可控风扇
pin: PA1			#fan1
max_power: 1.0

[verify_heater heater_bed]
max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 60
#   This controls heater verification during initial heating.  Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

[verify_heater extruder]
max_error: 120
			   
check_gain_time: 20
hysteresis: 5
heating_gain: 2

[bed_mesh]
speed: 300
horizontal_move_z: 10
probe_count: 20,20
fade_start: 0.5
fade_end: 25.0
split_delta_z: .01
move_check_distance: 3
mesh_pps: 0,0
algorithm: bicubic
relative_reference_index: 12
#For 300mm Size:
mesh_min: 25,25
mesh_max: 250,260

[gcode_macro Screws_Adjust]
gcode:
    G28
    QUAD_GANTRY_LEVEL
    G0 X-40 Y-40 Z10 F5000
   
[gcode_macro PRINT_START]
# 开始打印前gcode
gcode:
  G28                          
  QUAD_GANTRY_LEVEL
	#加上此行每次开始打印前自动调平
  #G28
  G1 E11.0 F3600
  G1 Z20 F3000
  G0 X-40 Y-40 F5000                
  M117 Preheat (Print) 
  BED_MESH_PROFILE LOAD=default  ; load bed mesh


[gcode_macro PRINT_END]
# 打印结束gcode
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
   
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z20 F3000                    ; move nozzle up 20mm
    G90                            ; absolute positioning
    G0  X150 Y280 F3600            ; park nozzle at back middle

[virtual_sdcard]
path: /home/pi/gcode_files

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    G1 Z20 F3000                    ; move nozzle up 20mm
    G90                            ; absolute positioning
    G0  X0 Y0 F3600 

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
